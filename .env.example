# =============================================================================
# JUSBRO - Environment Variables (Example)
# ============================================================================= 
# Copy this file to .env for your local development

# ----------------------------------------------------------------------------- 
# Next.js Configuration
# ----------------------------------------------------------------------------- 
NEXT_PUBLIC_APP_URL=http://localhost:3000
NEXT_PUBLIC_APP_NAME=JusBro
NEXT_PUBLIC_BASE_URL=http://localhost:3000
NEXT_RUNTIME=nodejs
NODE_ENV=development

# ----------------------------------------------------------------------------- 
# Database (Prisma)
# ----------------------------------------------------------------------------- 
# SQLite (Local Development - recommended for quick start)
DATABASE_URL="file:./prisma/dev.db"

# PostgreSQL (Production/Development - uncomment and configure)
# DATABASE_URL="postgresql://user:password@localhost:5432/jusbro?sslmode=disable"

# ----------------------------------------------------------------------------- 
# PJE Credentials - SISTEMA USA BANCO DE DADOS
# ----------------------------------------------------------------------------- 
# ‚ö†Ô∏è  O SISTEMA PRINCIPAL N√ÉO USA ESTAS VARI√ÅVEIS!
#    Configure credenciais em: http://localhost:3000/pje/credentials
#
# As vari√°veis abaixo s√£o APENAS para scripts standalone de teste manual:       
#   - server/scripts/pje-trt/common/login.js
#   - server/scripts/pje-trt/trt3/1g/*/raspar-*.js (modo teste)
#
# Para scripts standalone (opcional - apenas para testes manuais):
# PJE_CPF=12345678900
# PJE_SENHA=sua_senha_aqui
#
# Ì≤° RECOMENDADO: Use o gerenciamento de credenciais do sistema web:
#    1. Acesse: http://localhost:3000/pje/credentials
#    2. Cadastre escrit√≥rio/advogado
#    3. Adicione credenciais e associe aos tribunais
#    4. Sistema detecta automaticamente o idAdvogado do PJE

# ----------------------------------------------------------------------------- 
# Browserless Configuration
# ----------------------------------------------------------------------------- 
PORT=3000
MAX_CONCURRENT_SESSIONS=10
BROWSERLESS_TOKEN=your_token_here

# Debug Level
# Default threshold for messages
DEBUG=browserless*,-**:verbose

# More Verbose
#DEBUG=browserless*

# Most-est Verbose-est
#DEBUG=*

# Legacy token (mantido para compatibilidade)
TOKEN=your_token_here

# ----------------------------------------------------------------------------- 
# Scraping Job Configuration
# ----------------------------------------------------------------------------- 

# Controle de Concorr√™ncia
# -------------------------
# Quantidade m√°xima de jobs de scraping executando simultaneamente
MAX_CONCURRENT_JOBS=3

# Quantidade m√°xima de tribunais sendo raspados simultaneamente por job
# Recomendado: 1 (execu√ß√£o sequencial) para evitar sobrecarga
MAX_CONCURRENT_TRIBUNALS_PER_JOB=1

# Quantidade m√°xima de inst√¢ncias de navegador abertas simultaneamente
MAX_BROWSER_INSTANCES=10

# Timeouts e Retry
# ----------------
# Timeout m√°ximo para execu√ß√£o de um script de scraping (em milissegundos)      
# Padr√£o: 600000 (10 minutos)
SCRAPE_EXECUTION_TIMEOUT=600000

# N√∫mero m√°ximo de tentativas de retry para execu√ß√µes falhadas
# Padr√£o: 3 tentativas
SCRAPE_MAX_RETRIES=3

# Delay inicial entre retries (em milissegundos)
# Usa exponential backoff: delay * (2 ^ attemptNumber)
# Padr√£o: 5000ms (5 segundos) - retry 1: 5s, retry 2: 10s, retry 3: 20s
SCRAPE_RETRY_DELAY=5000

# Tipos de Erro Retryable
# -----------------------
# Lista de tipos de erro que devem ser retried automaticamente
# Valores poss√≠veis: authentication, network, timeout, rate_limit, script       
SCRAPE_RETRYABLE_ERROR_TYPES=network,timeout,rate_limit

# Polling e Refresh
# -----------------
# Intervalo de polling para atualiza√ß√£o de status de jobs ativos (em milissegundos)                                                                             
# Usado pelo componente ScrapeJobMonitor
# Padr√£o: 3000ms (3 segundos)
SCRAPE_POLLING_INTERVAL=3000

# ----------------------------------------------------------------------------- 
# Scheduled Scrapes Configuration
# ----------------------------------------------------------------------------- 

# Enable/disable scheduled scrapes service
# Set to 'false' to disable automatic scheduling (useful for development)       
# Default: true
ENABLE_SCHEDULED_SCRAPES=true

# Default timezone for scheduled scrapes
# Used when timezone is not specified in schedule configuration
# Must be a valid IANA timezone (e.g., America/Sao_Paulo, America/New_York)     
# Default: America/Sao_Paulo
DEFAULT_SCHEDULE_TIMEZONE=America/Sao_Paulo

# Maximum number of scheduled scrapes per credential
# Prevents abuse and resource exhaustion
# Set to 0 for unlimited (not recommended)
# Default: 10
MAX_SCHEDULES_PER_CREDENTIAL=10

# Minimum interval between scheduled executions (in minutes)
# Prevents too frequent executions that could overload the system
# Default: 60 (1 hour)
MIN_SCHEDULE_INTERVAL_MINUTES=60

# ----------------------------------------------------------------------------- 
# Redis Configuration (Optional - for multi-instance deployments)
# ----------------------------------------------------------------------------- 

# Enable Redis for log streaming across multiple instances
# Set to 'true' for production multi-instance deployments
# Set to 'false' or leave empty for single-instance development (uses in-memory EventEmitter)                                                                   
ENABLE_REDIS_LOG_STREAMING=false

# Redis connection URL
# Format: redis://[:password@]host[:port][/db-number]
# Examples:
#   Local: redis://localhost:6379
#   With auth: redis://:mypassword@localhost:6379
#   Remote: redis://user:password@redis.example.com:6379/0
REDIS_URL=redis://localhost:6379

# ----------------------------------------------------------------------------- 
# Debug Configuration (Development)
# ----------------------------------------------------------------------------- 

# Enable debug logs for SSE and log streaming
# Set to 'true' to see detailed logs in server and client console
# Useful for diagnosing log streaming issues
DEBUG_LOG_STREAMING=false
NEXT_PUBLIC_DEBUG_LOG_STREAMING=false

# Disable SSE and use fallback visual component
# Set to 'true' if SSE is not working in your environment
# Falls back to animated loading component with progress indicators
NEXT_PUBLIC_DISABLE_SSE=false

# ----------------------------------------------------------------------------- 
# GitHub Integration (Optional)
# ----------------------------------------------------------------------------- 

# GitHub Personal Access Token (optional - for better API rate limits)
# Used for fetching repository statistics
GITHUB_TOKEN=

# ----------------------------------------------------------------------------- 
# Server/Browserless Advanced Configuration (Optional)
# ----------------------------------------------------------------------------- 

# Host for the server
HOST=localhost

# Maximum queue length
QUEUE_LENGTH=10

# Connection timeout (ms)
TIMEOUT=30000

# Maximum retry attempts
RETRIES=5

# Enable debugger
ENABLE_DEBUGGER=true

# Health check URL
#HEALTH=

# Failed health check webhook
#FAILED_HEALTH_URL=

# Queue alert webhook
#QUEUE_ALERT_URL=

# Reject alert webhook
#REJECT_ALERT_URL=

# Timeout alert webhook
#TIMEOUT_ALERT_URL=

# Error alert webhook
#ERROR_ALERT_URL=

# CORS configuration
#ENABLE_CORS=
#CORS_ALLOW_ORIGIN=*
#CORS_ALLOW_METHODS=OPTIONS, POST, GET
#CORS_ALLOW_HEADERS=*
#CORS_ALLOW_CREDENTIALS=true
#CORS_EXPOSE_HEADERS=*
#CORS_MAX_AGE=2592000

# Resource limits
#MAX_CPU_PERCENT=99
#MAX_MEMORY_PERCENT=99
#MAX_PAYLOAD_SIZE=10485760
