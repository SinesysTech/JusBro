// Prisma Schema - Browserless PJE
// Database: SQLite

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Modelo: Tribunal
// Representa um Tribunal Regional do Trabalho (TRT)
model Tribunal {
  id         String   @id @default(uuid())
  codigo     String   @unique  // "TRT1", "TRT2", ..., "TRT24"
  nome       String              // "TRT da 3ª Região"
  regiao     String              // "Sudeste", "Sul", "Nordeste", "Centro-Oeste", "Norte"
  uf         String              // "MG", "SP", "RJ", etc.
  cidadeSede String              // "Belo Horizonte", "São Paulo", etc.
  ativo      Boolean  @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Relações
  configs    TribunalConfig[]

  @@index([codigo])
  @@index([regiao])
  @@index([ativo])
}

// Modelo: TribunalConfig
// Representa a configuração de URLs para um grau específico de um Tribunal
model TribunalConfig {
  id           String   @id @default(uuid())
  grau         String              // "1g" | "2g"
  urlBase      String              // "https://pje.trt3.jus.br"
  urlLoginSeam String              // "https://pje.trt3.jus.br/primeirograu/login.seam"
  urlApi       String              // "https://pje.trt3.jus.br/pje-comum-api/api"
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Relações
  tribunal     Tribunal  @relation(fields: [tribunalId], references: [id], onDelete: Cascade)
  tribunalId   String
  raspagens    Raspagem[]

  @@unique([tribunalId, grau])
  @@index([grau])
}

// Modelo: Raspagem
// Representa uma execução de raspagem no PJE
model Raspagem {
  id            String    @id @default(uuid())
  status        String    // "success" | "error" | "running"
  tipo          String    // "login" | "processos" | "detalhes"
  idAgrupamento Int?      // ID do agrupamento no PJE (1=Acervo, 2=Pendentes, etc)
  totalProcessos Int      @default(0)
  errorMessage  String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  completedAt   DateTime?

  // Relações
  processos         Processo[]
  tribunalConfig    TribunalConfig? @relation(fields: [tribunalConfigId], references: [id], onDelete: SetNull)
  tribunalConfigId  String?

  @@index([status])
  @@index([tipo])
  @@index([createdAt])
  @@index([tribunalConfigId])
}

// Modelo: Processo
// Representa um processo judicial do PJE
model Processo {
  id                 String   @id @default(uuid())
  numeroProcesso     String   @unique
  dataAjuizamento    String?
  classe             String?
  assunto            String?
  vara               String?
  fase               String?
  valor              Float?
  nomeParteAutora    String?
  nomeParteRe        String?

  // Dados adicionais do PJE
  idProcesso         String?  // ID interno do PJE
  dataUltimaMovimentacao String?
  situacao           String?

  // Metadados
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  // Relações
  raspagem           Raspagem? @relation(fields: [raspagemId], references: [id], onDelete: SetNull)
  raspagemId         String?
  partes             Parte[]

  @@index([numeroProcesso])
  @@index([nomeParteAutora])
  @@index([nomeParteRe])
  @@index([createdAt])
}

// Modelo: Parte
// Representa uma parte (autor, réu, advogado) de um processo
model Parte {
  id            String  @id @default(uuid())
  nome          String
  tipo          String  // "autor" | "reu" | "advogado" | "outro"
  documento     String? // CPF/CNPJ

  // Relações
  processo      Processo @relation(fields: [processoId], references: [id], onDelete: Cascade)
  processoId    String

  createdAt     DateTime @default(now())

  @@index([tipo])
  @@index([processoId])
}
