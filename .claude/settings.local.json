{
  "permissions": {
    "allow": [
      "Bash(docker --version:*)",
      "Bash(findstr:*)",
      "Bash(docker compose:*)",
      "Bash(docker pull:*)",
      "Bash(docker logs:*)",
      "Bash(docker inspect:*)",
      "Bash(docker rmi:*)",
      "Bash(docker manifest inspect:*)",
      "Bash(docker system:*)",
      "Bash(node --version:*)",
      "Bash(test:*)",
      "Bash(npm install)",
      "Bash(npm run install:browsers:*)",
      "Bash(npm run build:*)",
      "Bash(npm install:*)",
      "Bash(npm start)",
      "Bash(cp:*)",
      "Bash(copy .env.dev .env)",
      "Bash(curl:*)",
      "Bash(npm run build:openapi:*)",
      "Bash(npm run install:debugger:*)",
      "Bash(netstat:*)",
      "Bash(taskkill:*)",
      "Bash(awk:*)",
      "Bash(xargs:*)",
      "Bash(node scripts/build-open-api.js:*)",
      "Bash(npm run build:devtools:*)",
      "Bash(node -e:*)",
      "Bash(node test-anti-detection.js:*)",
      "Bash(dir:*)",
      "Bash(node login-pje-local-visual.js:*)",
      "Bash(timeout:*)",
      "Bash(tasklist:*)",
      "Bash(copy login-pje-completo.js scriptspjelogin.js)",
      "Bash(copy:*)",
      "Bash(copy login-pje-completo-resultado.png screenshotspje-login-success.png)",
      "Bash(node scripts/pje/capturar-api.js:*)",
      "Bash(node scripts/pje/raspar-processos.js:*)",
      "Bash(node scripts/pje/raspar-todos-processos.js:*)",
      "Bash(node:*)",
      "Bash(openspec list:*)",
      "Bash(openspec validate:*)",
      "Bash(openspec archive:*)",
      "Bash(mkdir:*)",
      "Bash(move:*)",
      "Bash(move scripts serverscripts)",
      "Bash(move external serverexternal)",
      "Bash(npx shadcn@latest add:*)",
      "Bash(npm run dev:*)",
      "Bash(npx prisma init:*)",
      "Bash(npx prisma migrate dev:*)",
      "Bash(tsc:*)",
      "Bash(npm run lint:*)",
      "Bash(npx next lint:*)",
      "Bash(del \".next\\dev\\lock\")",
      "Bash(npx prisma db seed)",
      "Read(//tmp/**)",
      "Bash(npm uninstall:*)",
      "Bash(npx tsc:*)",
      "Bash(npx tsx:*)",
      "Bash(npm run clean:next:*)",
      "Bash(npx prisma migrate reset --force)",
      "Bash(set PRISMA_USER_CONSENT_FOR_DANGEROUS_AI_ACTION=sim)",
      "Bash(cmd /c \"set PRISMA_USER_CONSENT_FOR_DANGEROUS_AI_ACTION=sim&& npx prisma migrate reset --force\")",
      "Bash(npx prisma generate:*)",
      "Bash(npx prisma db push:*)",
      "Bash(cmd /c \"taskkill /F /IM node.exe\")",
      "Bash(cmd /c \"rd /s /q .next & rd /s /q node_modules\\.prisma & echo Limpeza completa\")",
      "Bash(npm outdated:*)",
      "Bash(npm view:*)",
      "Bash(cmd /c \"rd /s /q node_modules 2>nul & del /f /q package-lock.json 2>nul & echo Limpeza concluida\")",
      "Bash(cmd /c \"if exist node_modules (echo node_modules existe) else (echo node_modules removido)\")",
      "Bash(cmd /c \"if exist package-lock.json (echo package-lock.json existe) else (echo package-lock.json removido)\")",
      "Bash(cmd /c \"if exist node_modules rmdir /s /q node_modules\")",
      "Bash(cmd /c \"if exist package-lock.json del /f /q package-lock.json\")",
      "Bash(powershell -Command:*)",
      "Bash(npm run build:schemas:*)",
      "Bash(npm run server:build:*)",
      "Bash(npx next build)",
      "Bash(cmd /c \"del /f /q .next\\dev\\lock\")",
      "Bash(cmd /c \"rd /s /q .next\\dev\\cache\")",
      "Bash(cmd /c \"taskkill /F /PID 35164\")",
      "Bash(cmd /c \"if exist .next\\dev\\lock del /f /q .next\\dev\\lock\")",
      "Bash(cmd /c \"netstat -ano | findstr :3000\")",
      "Bash(cmd /c \"rd /s /q .next\")",
      "Bash(openspec spec list:*)",
      "Bash(cmd /c \"taskkill /F /IM node.exe 2>nul || echo No node processes found\")",
      "SlashCommand(/openspec:apply add-landing-page)",
      "SlashCommand(/openspec:apply:*)",
      "Bash(cmd /c \"taskkill /F /PID 38620 2>nul || echo Process not found\")",
      "Bash(cmd /c \"rd /s /q .next\\dev\\cache 2>nul & del /f /q .next\\dev\\lock 2>nul & echo Cleaned\")"
    ],
    "deny": [],
    "ask": []
  }
}
